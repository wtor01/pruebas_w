openapi: 3.0.0
servers:
  - url: http://{hostname}/api
    variables:
      hostname:
        default: localhost:8080
  - url: https://{hostname}/api
    variables:
      hostname:
        default: localhost
info:
  version: 1.0.0
  title: API Admin
tags:
  - name: Aggregation features available
  - name: Aggregations config
  - name: Aggregations
paths:
  /aggregations:
    get:
      security:
        - BearerAuth: [ ]
      tags:
        - Aggregations
      summary: Get all aggregations
      description: 'Get all aggregations'
      operationId: Get all aggregations
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          required: true
          description: The numbers of items to return
        - in: query
          name: aggregation_config_id
          schema:
            type: string
            format: uuid
          required: true
          description: The id of the aggregation config
        - in: query
          name: start_date
          required: true
          schema:
            type: string
            format: date
          description: The day of generation the aggregations
        - in: query
          name: end_date
          required: true
          schema:
            type: string
            format: date
          description: The day of generation the aggregations
      responses:
        '200':
          $ref: '#/components/responses/GetAggregations'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /aggregations/{aggregation_id}:
    get:
      security:
        - BearerAuth: []
      tags:
        - Aggregations
      summary: Get aggregation
      description: 'Get aggregation'
      operationId: Get aggregation
      parameters:
        - in: path
          name: aggregation_id
          schema:
            type: string
            format: uuid
          required: true
          description: aggregation id
      responses:
        '200':
          $ref: '#/components/responses/GetAggregation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    GetAggregations:
      description: successful operation
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Aggregations"
    GetAggregation:
      description: successful operation
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AggregationWithCUPS"
    UnauthorizedError:
      description: Access token is missing or INV
  schemas:
    Pagination:
      type: object
      required:
        - limit
        - count
        - size
        - _links
        - results
      properties:
        limit:
          type: integer
        offset:
          type: integer
        size:
          type: integer
        count:
          type: integer
        _links:
          type: object
          required:
            - self
          properties:
            next:
              type: string
              description: "url for request next list"
            prev:
              type: string
              description: "url for request previous list"
            self:
              type: string
              description: "url for request current list"
    AggregationFeatures:
      type: object
      required:
        - limit
        - count
        - size
        - _links
        - results
      properties:
        limit:
          type: integer
        offset:
          type: integer
        size:
          type: integer
        count:
          type: integer
        _links:
          type: object
          required:
            - self
          properties:
            next:
              type: string
              description: "url for request next list"
            prev:
              type: string
              description: "url for request previous list"
            self:
              type: string
              description: "url for request current list"
        results:
          type: array
          items:
            $ref: '#/components/schemas/AggregationFeature'
    AggregationFeature:
      allOf:
        - type: object
          required:
            - id
          properties:
            id:
              type: string
              format: uuid
        - $ref: "#/components/schemas/AggregationFeaturesBase"
    AggregationFeaturesBase:
      type: object
      description: Aggregation features
      required:
        - name
        - field
      properties:
        name:
          type: string
        field:
          type: string
    AggregationsConfig:
      type: object
      required:
        - limit
        - count
        - size
        - _links
        - results
      properties:
        limit:
          type: integer
        offset:
          type: integer
        size:
          type: integer
        count:
          type: integer
        _links:
          type: object
          required:
            - self
          properties:
            next:
              type: string
              description: "url for request next list"
            prev:
              type: string
              description: "url for request previous list"
            self:
              type: string
              description: "url for request current list"
        results:
          type: array
          items:
            $ref: '#/components/schemas/AggregationConfig'
    AggregationConfig:
      allOf:
        - type: object
          required:
            - id
          properties:
            id:
              type: string
              format: uuid
        - $ref: "#/components/schemas/AggregationConfigBase"
    AggregationConfigBase:
      type: object
      description: Aggregation configuration
      required:
        - name
        - scheduler
        - start_date
        - features
      properties:
        name:
          type: string
        scheduler:
          type: string
        start_date:
          type: string
          format: date-time
          x-oapi-codegen-extra-tags:
            json: start_date
        end_date:
          type: string
          format: date-time
          x-oapi-codegen-extra-tags:
            json: end_date
        description:
          type: string
        features:
          type: array
          items:
            $ref: '#/components/schemas/AggregationFeature'
    Aggregations:
      type: object
      required:
        - limit
        - count
        - size
        - _links
        - results
      allOf:
        - $ref: '#/components/schemas/Pagination'
        - $ref: '#/components/schemas/AggregationsResults'
    AggregationsResults:
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Aggregation'

    Aggregation:
      allOf:
        - type: object
          required:
            - id
          properties:
            id:
              type: string
              format: uuid
        - $ref: "#/components/schemas/AggregationBase"
    AggregationWithCUPS:
      allOf:
        - type: object
          properties:
            listCUPSCurrent:
              type: array
              items:
                $ref: '#/components/schemas/AggregationCUPSCurrent'
            listCUPSPrevious:
              type: array
              items:
                $ref: '#/components/schemas/AggregationCUPSPrevious'
        - $ref: '#/components/schemas/Aggregation'
    AggregationBase:
      type: object
      description: Aggregation
      required:
        - aggregation_config_id
        - date
        - features
      properties:
        aggregation_config_id:
          type: string
          format: uuid
        date:
          type: string
          format: date-time
          x-oapi-codegen-extra-tags:
            json: end_date
        aggregation_before:
          type: string
          format: uuid
        features:
          type: array
          items:
            $ref: '#/components/schemas/Features'
    Features:
      type: object
      description: Features
      properties:
        feature:
          $ref: '#/components/schemas/AggregationFeature'
        value:
          type: string
    AggregationCUPSCurrent:
      type: object
      description: Characteristics of CUPS in Aggregation
      properties:
        CUPS:
          type: string
        Type:
          type: string
          enum: [IN, NEUTRAL]

    AggregationCUPSPrevious:
      type: object
      description: Characteristics of CUPS in Aggregation
      properties:
        CUPS:
          type: string
        Type:
          type: string
          enum: [OUT,NEUTRAL]