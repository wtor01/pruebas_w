// Code generated by mockery v2.11.0. DO NOT EDIT.

package mocks

import (
	context "context"

	clients "bitbucket.org/sercide/data-ingestion/internal/common/clients"

	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// Validation is an autogenerated mock type for the Validation type
type Validation struct {
	mock.Mock
}

// GetValidationConfigList provides a mock function with given fields: ctx, distributorID, valType
func (_m *Validation) GetValidationConfigList(ctx context.Context, distributorID string, valType string) ([]clients.ValidationConfig, error) {
	ret := _m.Called(ctx, distributorID, valType)

	var r0 []clients.ValidationConfig
	if rf, ok := ret.Get(0).(func(context.Context, string, string) []clients.ValidationConfig); ok {
		r0 = rf(ctx, distributorID, valType)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]clients.ValidationConfig)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string) error); ok {
		r1 = rf(ctx, distributorID, valType)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewValidation creates a new instance of Validation. It also registers a cleanup function to assert the mocks expectations.
func NewValidation(t testing.TB) *Validation {
	mock := &Validation{}

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
