// Code generated by mockery v2.11.0. DO NOT EDIT.

package mocks

import (
	context "context"

	clients "bitbucket.org/sercide/data-ingestion/internal/common/clients"

	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// MasterTables is an autogenerated mock type for the MasterTables type
type MasterTables struct {
	mock.Mock
}

// GetTariff provides a mock function with given fields: ctx, dto
func (_m *MasterTables) GetTariff(ctx context.Context, dto clients.GetTariffDto) (clients.Tariffs, error) {
	ret := _m.Called(ctx, dto)

	var r0 clients.Tariffs
	if rf, ok := ret.Get(0).(func(context.Context, clients.GetTariffDto) clients.Tariffs); ok {
		r0 = rf(ctx, dto)
	} else {
		r0 = ret.Get(0).(clients.Tariffs)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, clients.GetTariffDto) error); ok {
		r1 = rf(ctx, dto)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMasterTables creates a new instance of MasterTables. It also registers a cleanup function to assert the mocks expectations.
func NewMasterTables(t testing.TB) *MasterTables {
	mock := &MasterTables{}

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
