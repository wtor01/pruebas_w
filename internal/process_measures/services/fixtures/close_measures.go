package fixtures

import (
	"bitbucket.org/sercide/data-ingestion/internal/gross_measures"
	"bitbucket.org/sercide/data-ingestion/internal/measures"
	"time"
)

var MEASURES_CLOSE_DAILY = []gross_measures.MeasureCloseWrite{
	{
		StartDate:         time.Time{},
		EndDate:           time.Time{},
		ReadingDate:       time.Time{},
		Type:              "ABS",
		Status:            measures.Valid,
		ReadingType:       measures.DailyClosure,
		Contract:          "1",
		MeterSerialNumber: "123456",
		File:              "0130/Input/Prime/xxxxx",
		DistributorID:     "DistributorX",
		DistributorCDOS:   "0130",
		Periods: []gross_measures.MeasureClosePeriod{
			{
				Period: measures.P0,
				AI:     1,
				AE:     2,
				R1:     3,
				R2:     4,
				R3:     5,
				R4:     6,
			},
			{
				Period: measures.P1,
				AI:     7,
				AE:     8,
				R1:     9,
				R2:     10,
				R3:     11,
				R4:     12,
			},
			{
				Period: measures.P2,
				AI:     13,
				AE:     14,
				R1:     15,
				R2:     16,
				R3:     17,
				R4:     18,
			},
			{
				Period: measures.P3,
				AI:     19,
				AE:     20,
				R1:     21,
				R2:     22,
				R3:     23,
				R4:     24,
			},
			{
				Period: measures.P4,
				AI:     25,
				AE:     26,
				R1:     27,
				R2:     28,
				R3:     29,
				R4:     30,
			},
			{
				Period: measures.P5,
				AI:     31,
				AE:     32,
				R1:     33,
				R2:     34,
				R3:     35,
				R4:     36,
			},
			{
				Period: measures.P6,
				AI:     37,
				AE:     38,
				R1:     39,
				R2:     40,
				R3:     41,
				R4:     42,
			},
		},
	},
	{
		Status:      measures.Invalid,
		ReadingType: measures.DailyClosure,
	},
}

var MEASURES_CLOSE_MONTHLY = []gross_measures.MeasureCloseWrite{
	{
		EndDate:           time.Date(2022, time.Month(8), 31, 22, 0, 0, 0, time.UTC),
		Type:              "ABS",
		Status:            measures.Valid,
		ReadingType:       measures.BillingClosure,
		Contract:          "1",
		MeterSerialNumber: "123456",
		File:              "0130/Input/Prime/xxxxx",
		DistributorID:     "DistributorX",
		Periods: []gross_measures.MeasureClosePeriod{
			{
				Period: measures.P0,
				AI:     1,
				AE:     2,
				R1:     3,
				R2:     4,
				R3:     5,
				R4:     6,
			},
			{
				Period: measures.P1,
				AI:     7,
				AE:     8,
				R1:     9,
				R2:     10,
				R3:     11,
				R4:     12,
			},
			{
				Period: measures.P2,
				AI:     13,
				AE:     14,
				R1:     15,
				R2:     16,
				R3:     17,
				R4:     18,
			},
			{
				Period: measures.P3,
				AI:     19,
				AE:     20,
				R1:     21,
				R2:     22,
				R3:     23,
				R4:     24,
			},
			{
				Period: measures.P4,
				AI:     25,
				AE:     26,
				R1:     27,
				R2:     28,
				R3:     29,
				R4:     30,
			},
			{
				Period: measures.P5,
				AI:     31,
				AE:     32,
				R1:     33,
				R2:     34,
				R3:     35,
				R4:     36,
			},
			{
				Period: measures.P6,
				AI:     37,
				AE:     38,
				R1:     39,
				R2:     40,
				R3:     41,
				R4:     42,
			},
		},
	},
	{
		StartDate:         time.Time{},
		EndDate:           time.Date(2022, time.Month(8), 31, 22, 0, 0, 0, time.UTC),
		ReadingDate:       time.Time{},
		Type:              "ABS",
		Status:            measures.Invalid,
		ReadingType:       measures.BillingClosure,
		Contract:          "1",
		MeterSerialNumber: "123456",
		File:              "0130/Input/Prime/xxxxx",
		DistributorID:     "DistributorX",
		Periods: []gross_measures.MeasureClosePeriod{
			{
				Period: measures.P0,
			},
		},
	},
	{
		StartDate:         time.Time{},
		EndDate:           time.Date(2022, time.Month(8), 31, 22, 0, 0, 0, time.UTC),
		ReadingDate:       time.Time{},
		Type:              "INC",
		Status:            measures.Valid,
		ReadingType:       measures.BillingClosure,
		Contract:          "1",
		MeterSerialNumber: "123456",
		File:              "0130/Input/Prime/xxxxx",
		DistributorID:     "DistributorX",
		Periods: []gross_measures.MeasureClosePeriod{
			{
				Period: measures.P0,
				AI:     1000,
				AE:     2000,
				R1:     2,
				R2:     0,
				R3:     0,
				R4:     1,
			},
			{
				Period: measures.P1,
				AI:     10,
				AE:     0,
				R1:     900,
				R2:     100,
				R3:     0,
				R4:     1000,
			},
			{
				Period: measures.P2,
				AI:     400,
				AE:     110,
				R1:     12,
				R2:     0,
				R3:     0,
				R4:     0,
			},
			{
				Period: measures.P3,
				AI:     19,
				AE:     20,
				R1:     21,
				R2:     22,
				R3:     23,
				R4:     24,
			},
			{
				Period: measures.P4,
				AI:     25,
				AE:     26,
				R1:     27,
				R2:     28,
				R3:     29,
				R4:     30,
			},
			{
				Period: measures.P5,
				AI:     31,
				AE:     32,
				R1:     33,
				R2:     34,
				R3:     35,
				R4:     36,
			},
			{
				Period: measures.P6,
				AI:     37,
				AE:     38,
				R1:     39,
				R2:     40,
				R3:     41,
				R4:     42,
			},
		},
	},
	{
		EndDate:           time.Date(2022, time.Month(8), 31, 22, 0, 0, 0, time.UTC),
		Type:              "INC",
		Status:            measures.Invalid,
		ReadingType:       measures.BillingClosure,
		Contract:          "1",
		MeterSerialNumber: "123456",
		File:              "0130/Input/Prime/xxxxx",
		DistributorID:     "DistributorX",
		Periods: []gross_measures.MeasureClosePeriod{
			{
				Period: measures.P0,
				AI:     1,
				AE:     2,
				R1:     99,
				R2:     20,
				R3:     0,
				R4:     0,
			},
			{
				Period: measures.P1,
				AI:     2,
				AE:     3,
				R1:     0,
				R2:     4,
				R3:     33,
				R4:     0,
			},
		},
	},
}

var MEASURES_CLOSE_MONTHLY_2_HOURS = []gross_measures.MeasureCloseWrite{
	{
		EndDate:           time.Date(2022, time.Month(8), 31, 22, 0, 0, 0, time.UTC),
		Type:              "ABS",
		Status:            measures.Valid,
		ReadingType:       measures.BillingClosure,
		Contract:          "1",
		MeterSerialNumber: "123456",
		File:              "0130/Input/Prime/xxxxx",
		DistributorID:     "DistributorX",
		Periods: []gross_measures.MeasureClosePeriod{
			{
				Period: measures.P0,
				AI:     1,
				AE:     2,
				R1:     3,
				R2:     4,
				R3:     5,
				R4:     6,
			},
			{
				Period: measures.P1,
				AI:     7,
				AE:     8,
				R1:     9,
				R2:     10,
				R3:     11,
				R4:     12,
			},
			{
				Period: measures.P2,
				AI:     13,
				AE:     14,
				R1:     15,
				R2:     16,
				R3:     17,
				R4:     18,
			},
			{
				Period: measures.P3,
				AI:     19,
				AE:     20,
				R1:     21,
				R2:     22,
				R3:     23,
				R4:     24,
			},
			{
				Period: measures.P4,
				AI:     25,
				AE:     26,
				R1:     27,
				R2:     28,
				R3:     29,
				R4:     30,
			},
			{
				Period: measures.P5,
				AI:     31,
				AE:     32,
				R1:     33,
				R2:     34,
				R3:     35,
				R4:     36,
			},
			{
				Period: measures.P6,
				AI:     37,
				AE:     38,
				R1:     39,
				R2:     40,
				R3:     41,
				R4:     42,
			},
		},
	},
	{
		StartDate:         time.Time{},
		EndDate:           time.Date(2022, time.Month(8), 31, 22, 0, 0, 0, time.UTC),
		ReadingDate:       time.Time{},
		Type:              "ABS",
		Status:            measures.Invalid,
		ReadingType:       measures.BillingClosure,
		Contract:          "1",
		MeterSerialNumber: "123456",
		File:              "0130/Input/Prime/xxxxx",
		DistributorID:     "DistributorX",
		Periods: []gross_measures.MeasureClosePeriod{
			{
				Period: measures.P0,
			},
		},
	},
	{
		StartDate:         time.Time{},
		EndDate:           time.Date(2022, time.Month(8), 31, 22, 0, 0, 0, time.UTC),
		ReadingDate:       time.Time{},
		Type:              "INC",
		Status:            measures.Valid,
		ReadingType:       measures.BillingClosure,
		Contract:          "1",
		MeterSerialNumber: "123456",
		File:              "0130/Input/Prime/xxxxx",
		DistributorID:     "DistributorX",
		Periods: []gross_measures.MeasureClosePeriod{
			{
				Period: measures.P0,
				AI:     1000,
				AE:     2000,
				R1:     2,
				R2:     0,
				R3:     0,
				R4:     1,
			},
			{
				Period: measures.P1,
				AI:     10,
				AE:     0,
				R1:     900,
				R2:     100,
				R3:     0,
				R4:     1000,
			},
			{
				Period: measures.P2,
				AI:     400,
				AE:     110,
				R1:     12,
				R2:     0,
				R3:     0,
				R4:     0,
			},
			{
				Period: measures.P3,
				AI:     19,
				AE:     20,
				R1:     21,
				R2:     22,
				R3:     23,
				R4:     24,
			},
			{
				Period: measures.P4,
				AI:     25,
				AE:     26,
				R1:     27,
				R2:     28,
				R3:     29,
				R4:     30,
			},
			{
				Period: measures.P5,
				AI:     31,
				AE:     32,
				R1:     33,
				R2:     34,
				R3:     35,
				R4:     36,
			},
			{
				Period: measures.P6,
				AI:     37,
				AE:     38,
				R1:     39,
				R2:     40,
				R3:     41,
				R4:     42,
			},
		},
	},
	{
		EndDate:           time.Date(2022, time.Month(8), 31, 22, 0, 0, 0, time.UTC),
		Type:              "INC",
		Status:            measures.Invalid,
		ReadingType:       measures.BillingClosure,
		Contract:          "1",
		MeterSerialNumber: "123456",
		File:              "0130/Input/Prime/xxxxx",
		DistributorID:     "DistributorX",
		Periods: []gross_measures.MeasureClosePeriod{
			{
				Period: measures.P0,
				AI:     1,
				AE:     2,
				R1:     99,
				R2:     20,
				R3:     0,
				R4:     0,
			},
			{
				Period: measures.P1,
				AI:     2,
				AE:     3,
				R1:     0,
				R2:     4,
				R3:     33,
				R4:     0,
			},
		},
	},
	{
		EndDate:           time.Date(2022, time.Month(8), 31, 6, 0, 0, 0, time.UTC),
		Type:              "ABS",
		Status:            measures.Valid,
		ReadingType:       measures.BillingClosure,
		Contract:          "1",
		MeterSerialNumber: "123456",
		File:              "0130/Input/Prime/xxxxx",
		DistributorID:     "DistributorX",
		Periods: []gross_measures.MeasureClosePeriod{
			{
				Period: measures.P0,
				AI:     1,
				AE:     2,
				R1:     3,
				R2:     4,
				R3:     5,
				R4:     6,
			},
			{
				Period: measures.P1,
				AI:     7,
				AE:     8,
				R1:     9,
				R2:     10,
				R3:     11,
				R4:     12,
			},
			{
				Period: measures.P2,
				AI:     13,
				AE:     14,
				R1:     15,
				R2:     16,
				R3:     17,
				R4:     18,
			},
			{
				Period: measures.P3,
				AI:     19,
				AE:     20,
				R1:     21,
				R2:     22,
				R3:     23,
				R4:     24,
			},
			{
				Period: measures.P4,
				AI:     25,
				AE:     26,
				R1:     27,
				R2:     28,
				R3:     29,
				R4:     30,
			},
			{
				Period: measures.P5,
				AI:     31,
				AE:     32,
				R1:     33,
				R2:     34,
				R3:     35,
				R4:     36,
			},
			{
				Period: measures.P6,
				AI:     37,
				AE:     38,
				R1:     39,
				R2:     40,
				R3:     41,
				R4:     42,
			},
		},
	},
	{
		StartDate:         time.Time{},
		EndDate:           time.Date(2022, time.Month(8), 31, 6, 0, 0, 0, time.UTC),
		ReadingDate:       time.Time{},
		Type:              "ABS",
		Status:            measures.Invalid,
		ReadingType:       measures.BillingClosure,
		Contract:          "1",
		MeterSerialNumber: "123456",
		File:              "0130/Input/Prime/xxxxx",
		DistributorID:     "DistributorX",
		Periods: []gross_measures.MeasureClosePeriod{
			{
				Period: measures.P0,
			},
		},
	},
	{
		StartDate:         time.Time{},
		EndDate:           time.Date(2022, time.Month(8), 31, 6, 0, 0, 0, time.UTC),
		ReadingDate:       time.Time{},
		Type:              "INC",
		Status:            measures.Valid,
		ReadingType:       measures.BillingClosure,
		Contract:          "1",
		MeterSerialNumber: "123456",
		File:              "0130/Input/Prime/xxxxx",
		DistributorID:     "DistributorX",
		Periods: []gross_measures.MeasureClosePeriod{
			{
				Period: measures.P0,
				AI:     1000,
				AE:     2000,
				R1:     2,
				R2:     0,
				R3:     0,
				R4:     1,
			},
			{
				Period: measures.P1,
				AI:     10,
				AE:     0,
				R1:     900,
				R2:     100,
				R3:     0,
				R4:     1000,
			},
			{
				Period: measures.P2,
				AI:     400,
				AE:     110,
				R1:     12,
				R2:     0,
				R3:     0,
				R4:     0,
			},
			{
				Period: measures.P3,
				AI:     19,
				AE:     20,
				R1:     21,
				R2:     22,
				R3:     23,
				R4:     24,
			},
			{
				Period: measures.P4,
				AI:     25,
				AE:     26,
				R1:     27,
				R2:     28,
				R3:     29,
				R4:     30,
			},
			{
				Period: measures.P5,
				AI:     31,
				AE:     32,
				R1:     33,
				R2:     34,
				R3:     35,
				R4:     36,
			},
			{
				Period: measures.P6,
				AI:     37,
				AE:     38,
				R1:     39,
				R2:     40,
				R3:     41,
				R4:     42,
			},
		},
	},
	{
		EndDate:           time.Date(2022, time.Month(8), 31, 6, 0, 0, 0, time.UTC),
		Type:              "INC",
		Status:            measures.Invalid,
		ReadingType:       measures.BillingClosure,
		Contract:          "1",
		MeterSerialNumber: "123456",
		File:              "0130/Input/Prime/xxxxx",
		DistributorID:     "DistributorX",
		Periods: []gross_measures.MeasureClosePeriod{
			{
				Period: measures.P0,
				AI:     1,
				AE:     2,
				R1:     99,
				R2:     20,
				R3:     0,
				R4:     0,
			},
			{
				Period: measures.P1,
				AI:     2,
				AE:     3,
				R1:     0,
				R2:     4,
				R3:     33,
				R4:     0,
			},
		},
	},
}

var CALENDAR_PERIOD = measures.CalendarPeriod{
	CalendarCode: "",
	GeographicID: "",
	CalendarPeriodHours: measures.CalendarPeriodHours{
		Hour1:  measures.P3,
		Hour2:  measures.P3,
		Hour3:  measures.P3,
		Hour4:  measures.P3,
		Hour5:  measures.P3,
		Hour6:  measures.P3,
		Hour7:  measures.P3,
		Hour8:  measures.P2,
		Hour9:  measures.P2,
		Hour10: measures.P1,
		Hour11: measures.P1,
		Hour12: measures.P1,
		Hour13: measures.P1,
		Hour14: measures.P2,
		Hour15: measures.P2,
		Hour16: measures.P2,
		Hour17: measures.P2,
		Hour18: measures.P1,
		Hour19: measures.P1,
		Hour20: measures.P1,
		Hour21: measures.P1,
		Hour22: measures.P1,
		Hour23: measures.P1,
		Hour00: measures.P3,
	},
	Festive: measures.CalendarPeriodHours{
		Hour1:  measures.P3,
		Hour2:  measures.P3,
		Hour3:  measures.P3,
		Hour4:  measures.P3,
		Hour5:  measures.P3,
		Hour6:  measures.P3,
		Hour7:  measures.P3,
		Hour8:  measures.P3,
		Hour9:  measures.P3,
		Hour10: measures.P3,
		Hour11: measures.P3,
		Hour12: measures.P3,
		Hour13: measures.P3,
		Hour14: measures.P3,
		Hour15: measures.P3,
		Hour16: measures.P3,
		Hour17: measures.P3,
		Hour18: measures.P3,
		Hour19: measures.P3,
		Hour20: measures.P3,
		Hour21: measures.P3,
		Hour22: measures.P3,
		Hour23: measures.P3,
		Hour00: measures.P3,
	},
	Day:       time.Time{},
	IsFestive: false,
}

var MEASURES_CURVE = []gross_measures.MeasureCurveWrite{
	{
		EndDate:           time.Date(2022, 04, 30, 23, 0, 0, 0, time.UTC),
		Type:              "INC",
		Status:            measures.Valid,
		ReadingType:       measures.Curve,
		CurveType:         measures.HourlyMeasureCurveReadingType,
		Contract:          "1",
		MeterSerialNumber: "123456",
		DistributorID:     "DistributorX",
		AI:                1,
		AE:                2,
		R1:                3,
		R2:                4,
		R3:                5,
		R4:                6,
	},
	{
		EndDate:           time.Date(2022, 5, 1, 00, 0, 0, 0, time.UTC),
		Type:              "INC",
		Status:            measures.Valid,
		ReadingType:       measures.Curve,
		CurveType:         measures.HourlyMeasureCurveReadingType,
		Contract:          "1",
		MeterSerialNumber: "123456",
		DistributorID:     "DistributorX",
		AI:                1,
		AE:                2,
		R1:                3,
		R2:                4,
		R3:                5,
		R4:                6,
	},
}
