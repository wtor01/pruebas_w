// Package stats provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package stats

const (
	BearerAuthScopes = "BearerAuth.Scopes"
)

// Defines values for MeasureStatisticsType.
const (
	MeasureStatisticsTypeOTHER MeasureStatisticsType = "OTHER"

	MeasureStatisticsTypeTLG MeasureStatisticsType = "TLG"

	MeasureStatisticsTypeTLM MeasureStatisticsType = "TLM"
)

// Defines values for MeasureStatisticsCUPSType.
const (
	MeasureStatisticsCUPSTypeOTHER MeasureStatisticsCUPSType = "OTHER"

	MeasureStatisticsCUPSTypeTLG MeasureStatisticsCUPSType = "TLG"

	MeasureStatisticsCUPSTypeTLM MeasureStatisticsCUPSType = "TLM"
)

// MeasureStatistics defines model for MeasureStatistics.
type MeasureStatistics struct {
	DailyStats    *[]MeasureStatisticsDaily `json:"dailyStats,omitempty"`
	DistributorId string                    `json:"distributor_id"`
	Month         int                       `json:"month"`
	Type          MeasureStatisticsType     `json:"type"`
	Year          int                       `json:"year"`
}

// MeasureStatisticsType defines model for MeasureStatistics.Type.
type MeasureStatisticsType string

// MeasureStatisticsCUPS defines model for MeasureStatisticsCUPS.
type MeasureStatisticsCUPS struct {
	Cups          string                    `json:"cups"`
	DailyStats    *[]MeasureStatisticsDaily `json:"dailyStats,omitempty"`
	DistributorId string                    `json:"distributor_id"`
	Month         int                       `json:"month"`
	Type          MeasureStatisticsCUPSType `json:"type"`
	Year          int                       `json:"year"`
}

// MeasureStatisticsCUPSType defines model for MeasureStatisticsCUPS.Type.
type MeasureStatisticsCUPSType string

// MeasureStatisticsDaily defines model for MeasureStatisticsDaily.
type MeasureStatisticsDaily struct {
	DailyClosure           MeasureStatisticsDailyResults `json:"daily_closure"`
	Date                   int                           `json:"date"`
	ExpectedCurve          int                           `json:"expected_curve"`
	ExpectedDailyClosure   int                           `json:"expected_dailyClosure"`
	ExpectedMonthlyClosure int                           `json:"expected_monthlyClosure"`
	LoadCurve              MeasureStatisticsDailyResults `json:"load_curve"`
	MonthlyClosure         MeasureStatisticsDailyResults `json:"monthly_closure"`
}

// MeasureStatisticsDailyResults defines model for MeasureStatisticsDailyResults.
type MeasureStatisticsDailyResults struct {
	Absent     *int `json:"absent,omitempty"`
	Complete   *int `json:"complete,omitempty"`
	Incomplete *int `json:"incomplete,omitempty"`
	Inv        *int `json:"inv,omitempty"`
	Sup        *int `json:"sup,omitempty"`
	Total      *int `json:"total,omitempty"`
	Val        *int `json:"val,omitempty"`
}

// MeasureStatisticsList defines model for MeasureStatisticsList.
type MeasureStatisticsList []MeasureStatistics

// Pagination defines model for Pagination.
type Pagination struct {
	Links struct {
		// url for request next list
		Next *string `json:"next,omitempty"`

		// url for request previous list
		Prev *string `json:"prev,omitempty"`

		// url for request current list
		Self string `json:"self"`
	} `json:"_links"`
	Count  int  `json:"count"`
	Limit  int  `json:"limit"`
	Offset *int `json:"offset,omitempty"`
	Size   int  `json:"size"`
}

// GetMeasureStatisticsCUPSResponse defines model for GetMeasureStatisticsCUPSResponse.
type GetMeasureStatisticsCUPSResponse struct {
	// Embedded struct due to allOf(#/components/schemas/Pagination)
	Pagination `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Results []MeasureStatisticsCUPS `json:"results"`
}

// GetMeasureStatisticsResponse defines model for GetMeasureStatisticsResponse.
type GetMeasureStatisticsResponse MeasureStatisticsList

// GetProcessMeasureStatisticsByCupsParams defines parameters for GetProcessMeasureStatisticsByCups.
type GetProcessMeasureStatisticsByCupsParams struct {
	// distributor id
	DistributorId string `json:"distributor_id"`

	// Number of month
	Month int `json:"month"`

	// Number of year
	Year int `json:"year"`

	// Type of measurement config
	Type GetProcessMeasureStatisticsByCupsParamsType `json:"type"`

	// The number of items to skip before starting to collect the result set
	Offset *int `json:"offset,omitempty"`

	// The numbers of items to return
	Limit int `json:"limit"`
}

// GetProcessMeasureStatisticsByCupsParamsType defines parameters for GetProcessMeasureStatisticsByCups.
type GetProcessMeasureStatisticsByCupsParamsType string

// GetProcessMeasureStatisticsParams defines parameters for GetProcessMeasureStatistics.
type GetProcessMeasureStatisticsParams struct {
	// distributor id
	DistributorId string `json:"distributor_id"`

	// Number of month
	Month int `json:"month"`

	// Number of year
	Year int `json:"year"`

	// Type of measurement config
	Type GetProcessMeasureStatisticsParamsType `json:"type"`
}

// GetProcessMeasureStatisticsParamsType defines parameters for GetProcessMeasureStatistics.
type GetProcessMeasureStatisticsParamsType string
