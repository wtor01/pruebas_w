// Package http provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package http

import (
	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
)

const (
	BearerAuthScopes = "BearerAuth.Scopes"
)

// ContractualSituation defines model for ContractualSituation.
type ContractualSituation struct {
	EndDate      *openapi_types.Date `json:"end_date,omitempty"`
	Id           string              `json:"id"`
	P1Demand     *float64            `json:"p1_demand,omitempty"`
	P2Demand     *float64            `json:"p2_demand,omitempty"`
	P3Demand     *float64            `json:"p3_demand,omitempty"`
	P4Demand     *float64            `json:"p4_demand,omitempty"`
	P5Demand     *float64            `json:"p5_demand,omitempty"`
	P6Demand     *float64            `json:"p6_demand,omitempty"`
	RetailerCdos *string             `json:"retailer_cdos,omitempty"`
	RetailerCode *string             `json:"retailer_code,omitempty"`
	RetailerName *string             `json:"retailer_name,omitempty"`
	StartDate    *openapi_types.Date `json:"start_date,omitempty"`
	Tariff       *string             `json:"tariff,omitempty"`
}

// Distributor defines model for Distributor.
type Distributor struct {
	Id        string  `json:"id"`
	Name      *string `json:"name,omitempty"`
	R1        *string `json:"r1,omitempty"`
	SmarkiaId *string `json:"smarkia_id,omitempty"`
}

// MeasureEquipment defines model for MeasureEquipment.
type MeasureEquipment struct {
	ActiveConstant    *float64 `json:"active_constant,omitempty"`
	Brand             *string  `json:"brand,omitempty"`
	Distributor       *string  `json:"distributor,omitempty"`
	Id                string   `json:"id"`
	MaximeterConstant *float64 `json:"maximeter_constant,omitempty"`
	Model             *string  `json:"model,omitempty"`
	ReactiveConstant  *float64 `json:"reactive_constant,omitempty"`
	SerialNumber      *string  `json:"serial_number,omitempty"`
	Technology        *string  `json:"technology,omitempty"`
	Type              *string  `json:"type,omitempty"`
}

// MeasurePoint defines model for MeasurePoint.
type MeasurePoint struct {
	Id         string  `json:"id"`
	LossesCoef *string `json:"losses_coef,omitempty"`
	LossesPerc *string `json:"losses_perc,omitempty"`
	Type       *string `json:"type,omitempty"`
}

// Meter defines model for Meter.
type Meter struct {
	ActiveConstant    *float64 `json:"active_constant,omitempty"`
	Brand             *string  `json:"brand,omitempty"`
	Id                string   `json:"id"`
	MaximeterConstant *float64 `json:"maximeter_constant,omitempty"`
	Model             *string  `json:"model,omitempty"`
	ReactiveConstant  *float64 `json:"reactive_constant,omitempty"`
	SerialNumber      *string  `json:"serial_number,omitempty"`
	SmakiaId          *string  `json:"smakia_id,omitempty"`
	Technology        *string  `json:"technology,omitempty"`
	Type              *string  `json:"type,omitempty"`
}

// MeterConfig defines model for MeterConfig.
type MeterConfig struct {
	Ae                   *int                  `json:"ae,omitempty"`
	Ai                   *int                  `json:"ai,omitempty"`
	Calendar             *string               `json:"calendar,omitempty"`
	ContractualSituation *ContractualSituation `json:"contractual_situation,omitempty"`
	Cups                 *string               `json:"cups,omitempty"`
	CurveType            *string               `json:"curve_type,omitempty"`
	E                    *int                  `json:"e,omitempty"`
	EndDate              *openapi_types.Date   `json:"end_date,omitempty"`
	Id                   string                `json:"id"`
	MeasurePoint         *MeasurePoint         `json:"measure_point,omitempty"`
	Meter                *Meter                `json:"meter,omitempty"`
	Mx                   *int                  `json:"mx,omitempty"`
	PriorityContract     *float32              `json:"priority_contract,omitempty"`
	R1                   *int                  `json:"r1,omitempty"`
	R2                   *int                  `json:"r2,omitempty"`
	R3                   *int                  `json:"r3,omitempty"`
	R4                   *int                  `json:"r4,omitempty"`
	ReadingType          *string               `json:"reading_type,omitempty"`
	RentingPrince        *float64              `json:"renting_prince,omitempty"`
	ServicePoint         *ServicePoint         `json:"service_point,omitempty"`
	StartDate            *openapi_types.Date   `json:"start_date,omitempty"`
	TlgCode              *string               `json:"tlg_code,omitempty"`
	Type                 *string               `json:"type,omitempty"`
}

// ServicePoint defines model for ServicePoint.
type ServicePoint struct {
	Cups                *string `json:"cups,omitempty"`
	Enabled             *bool   `json:"enabled,omitempty"`
	Id                  string  `json:"id"`
	MeasureTensionLevel *string `json:"measure_tension_level,omitempty"`
	Name                *string `json:"name,omitempty"`
	PointTensionLevel   *string `json:"point_tension_level,omitempty"`
	PointType           *string `json:"point_type,omitempty"`
	ServiceType         *string `json:"service_type,omitempty"`
	TensionSection      *int    `json:"tension_section,omitempty"`
}

// DistributorsResponseList defines model for DistributorsResponseList.
type DistributorsResponseList struct {
	Links struct {
		// url for request next list
		Next *string `json:"next,omitempty"`

		// url for request previous list
		Prev *string `json:"prev,omitempty"`

		// url for request current list
		Self string `json:"self"`
	} `json:"_links"`
	Count   int           `json:"count"`
	Limit   int           `json:"limit"`
	Offset  *int          `json:"offset,omitempty"`
	Results []Distributor `json:"results"`
	Size    int           `json:"size"`
}

// MeasureEquipmentsResponseList defines model for MeasureEquipmentsResponseList.
type MeasureEquipmentsResponseList struct {
	Links struct {
		// url for request next list
		Next *string `json:"next,omitempty"`

		// url for request previous list
		Prev *string `json:"prev,omitempty"`

		// url for request current list
		Self string `json:"self"`
	} `json:"_links"`
	Count   int                `json:"count"`
	Limit   int                `json:"limit"`
	Offset  *int               `json:"offset,omitempty"`
	Results []MeasureEquipment `json:"results"`
	Size    int                `json:"size"`
}

// ListDistributorsParams defines parameters for ListDistributors.
type ListDistributorsParams struct {
	// The number of items to skip before starting to collect the result set
	Offset *int `json:"offset,omitempty"`

	// The numbers of items to return
	Limit int `json:"limit"`

	// Search text
	Q *string `json:"q,omitempty"`

	// short by
	Sort *[]string `json:"sort,omitempty"`
}

// ListMeasureEquipmentParams defines parameters for ListMeasureEquipment.
type ListMeasureEquipmentParams struct {
	// The number of items to skip before starting to collect the result set
	Offset *int `json:"offset,omitempty"`

	// The numbers of items to return
	Limit int `json:"limit"`

	// Search text
	Q *string `json:"q,omitempty"`

	// short by
	Sort *[]string `json:"sort,omitempty"`
}

// GetMeterConfigParams defines parameters for GetMeterConfig.
type GetMeterConfigParams struct {
	// cups
	Cups *string `json:"cups,omitempty"`

	// date of configuration
	Date openapi_types.Date `json:"date"`
}
