// Package dashboard provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package dashboard

import (
	"time"

	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
)

const (
	BearerAuthScopes = "BearerAuth.Scopes"
)

// Defines values for BalancePeriodsMethod.
const (
	BalancePeriodsMethodADJUSTED BalancePeriodsMethod = "ADJUSTED"

	BalancePeriodsMethodCALCULATED BalancePeriodsMethod = "CALCULATED"

	BalancePeriodsMethodESTIMATED BalancePeriodsMethod = "ESTIMATED"

	BalancePeriodsMethodOUTLINED BalancePeriodsMethod = "OUTLINED"

	BalancePeriodsMethodREAL BalancePeriodsMethod = "REAL"
)

// Defines values for BalancePeriodsOrigin.
const (
	BalancePeriodsOriginAUTO BalancePeriodsOrigin = "AUTO"

	BalancePeriodsOriginESTIMATE BalancePeriodsOrigin = "ESTIMATE"

	BalancePeriodsOriginLOCAL BalancePeriodsOrigin = "LOCAL"

	BalancePeriodsOriginREMOTE BalancePeriodsOrigin = "REMOTE"

	BalancePeriodsOriginTLG BalancePeriodsOrigin = "TLG"

	BalancePeriodsOriginTLM BalancePeriodsOrigin = "TLM"
)

// Defines values for CalendarCurveItemStatus.
const (
	CalendarCurveItemStatusADJUSTED CalendarCurveItemStatus = "ADJUSTED"

	CalendarCurveItemStatusCALCULATED CalendarCurveItemStatus = "CALCULATED"

	CalendarCurveItemStatusESTIMATED CalendarCurveItemStatus = "ESTIMATED"

	CalendarCurveItemStatusOUTLINED CalendarCurveItemStatus = "OUTLINED"

	CalendarCurveItemStatusREAL CalendarCurveItemStatus = "REAL"
)

// Defines values for DailyCurveStatus.
const (
	DailyCurveStatusADJUSTED DailyCurveStatus = "ADJUSTED"

	DailyCurveStatusCALCULATED DailyCurveStatus = "CALCULATED"

	DailyCurveStatusESTIMATED DailyCurveStatus = "ESTIMATED"

	DailyCurveStatusOUTLINED DailyCurveStatus = "OUTLINED"

	DailyCurveStatusREAL DailyCurveStatus = "REAL"
)

// Defines values for ExecutionSummaryBalanceOrigin.
const (
	ExecutionSummaryBalanceOriginDAILY ExecutionSummaryBalanceOrigin = "DAILY"

	ExecutionSummaryBalanceOriginMONTHLY ExecutionSummaryBalanceOrigin = "MONTHLY"

	ExecutionSummaryBalanceOriginNOCLOSURE ExecutionSummaryBalanceOrigin = "NO_CLOSURE"

	ExecutionSummaryBalanceOriginOTHER ExecutionSummaryBalanceOrigin = "OTHER"
)

// Defines values for ExecutionSummaryCurveStatus.
const (
	ExecutionSummaryCurveStatusABSENT ExecutionSummaryCurveStatus = "ABSENT"

	ExecutionSummaryCurveStatusCOMPLETE ExecutionSummaryCurveStatus = "COMPLETE"

	ExecutionSummaryCurveStatusINCOMPLETE ExecutionSummaryCurveStatus = "INCOMPLETE"
)

// Defines values for FiscalBillingMeasuresMagnitudes.
const (
	FiscalBillingMeasuresMagnitudesAE FiscalBillingMeasuresMagnitudes = "AE"

	FiscalBillingMeasuresMagnitudesAI FiscalBillingMeasuresMagnitudes = "AI"

	FiscalBillingMeasuresMagnitudesR1 FiscalBillingMeasuresMagnitudes = "R1"

	FiscalBillingMeasuresMagnitudesR2 FiscalBillingMeasuresMagnitudes = "R2"

	FiscalBillingMeasuresMagnitudesR3 FiscalBillingMeasuresMagnitudes = "R3"

	FiscalBillingMeasuresMagnitudesR4 FiscalBillingMeasuresMagnitudes = "R4"
)

// Defines values for FiscalBillingMeasuresPeriods.
const (
	FiscalBillingMeasuresPeriodsP1 FiscalBillingMeasuresPeriods = "P1"

	FiscalBillingMeasuresPeriodsP2 FiscalBillingMeasuresPeriods = "P2"

	FiscalBillingMeasuresPeriodsP3 FiscalBillingMeasuresPeriods = "P3"

	FiscalBillingMeasuresPeriodsP4 FiscalBillingMeasuresPeriods = "P4"

	FiscalBillingMeasuresPeriodsP5 FiscalBillingMeasuresPeriods = "P5"

	FiscalBillingMeasuresPeriodsP6 FiscalBillingMeasuresPeriods = "P6"
)

// Defines values for FiscalBillingMeasuresPrincipalMagnitude.
const (
	FiscalBillingMeasuresPrincipalMagnitudeAE FiscalBillingMeasuresPrincipalMagnitude = "AE"

	FiscalBillingMeasuresPrincipalMagnitudeAI FiscalBillingMeasuresPrincipalMagnitude = "AI"

	FiscalBillingMeasuresPrincipalMagnitudeR1 FiscalBillingMeasuresPrincipalMagnitude = "R1"

	FiscalBillingMeasuresPrincipalMagnitudeR2 FiscalBillingMeasuresPrincipalMagnitude = "R2"

	FiscalBillingMeasuresPrincipalMagnitudeR3 FiscalBillingMeasuresPrincipalMagnitude = "R3"

	FiscalBillingMeasuresPrincipalMagnitudeR4 FiscalBillingMeasuresPrincipalMagnitude = "R4"
)

// Defines values for FiscalBillingMeasuresStatus.
const (
	FiscalBillingMeasuresStatusBILLED FiscalBillingMeasuresStatus = "BILLED"

	FiscalBillingMeasuresStatusCALCULATED FiscalBillingMeasuresStatus = "CALCULATED"

	FiscalBillingMeasuresStatusCALCULATING FiscalBillingMeasuresStatus = "CALCULATING"

	FiscalBillingMeasuresStatusCANCELLED FiscalBillingMeasuresStatus = "CANCELLED"

	FiscalBillingMeasuresStatusOVERRIDED FiscalBillingMeasuresStatus = "OVERRIDED"

	FiscalBillingMeasuresStatusPENDING FiscalBillingMeasuresStatus = "PENDING"

	FiscalBillingMeasuresStatusREADYTOBILL FiscalBillingMeasuresStatus = "READY_TO_BILL"
)

// Defines values for FiscalMeasureByCupsAtrCalification.
const (
	FiscalMeasureByCupsAtrCalificationADJUSTED FiscalMeasureByCupsAtrCalification = "ADJUSTED"

	FiscalMeasureByCupsAtrCalificationCALCULATED FiscalMeasureByCupsAtrCalification = "CALCULATED"

	FiscalMeasureByCupsAtrCalificationESTIMATED FiscalMeasureByCupsAtrCalification = "ESTIMATED"

	FiscalMeasureByCupsAtrCalificationOUTLINED FiscalMeasureByCupsAtrCalification = "OUTLINED"

	FiscalMeasureByCupsAtrCalificationREAL FiscalMeasureByCupsAtrCalification = "REAL"
)

// Defines values for FiscalMeasureByCupsAtrType.
const (
	FiscalMeasureByCupsAtrTypeDAILY FiscalMeasureByCupsAtrType = "DAILY"

	FiscalMeasureByCupsAtrTypeMONTHLY FiscalMeasureByCupsAtrType = "MONTHLY"

	FiscalMeasureByCupsAtrTypeNOCLOSURE FiscalMeasureByCupsAtrType = "NO_CLOSURE"

	FiscalMeasureByCupsAtrTypeOTHER FiscalMeasureByCupsAtrType = "OTHER"
)

// Defines values for FiscalMeasureByCupsCurveCalification.
const (
	FiscalMeasureByCupsCurveCalificationADJUSTED FiscalMeasureByCupsCurveCalification = "ADJUSTED"

	FiscalMeasureByCupsCurveCalificationCALCULATED FiscalMeasureByCupsCurveCalification = "CALCULATED"

	FiscalMeasureByCupsCurveCalificationESTIMATED FiscalMeasureByCupsCurveCalification = "ESTIMATED"

	FiscalMeasureByCupsCurveCalificationOUTLINED FiscalMeasureByCupsCurveCalification = "OUTLINED"

	FiscalMeasureByCupsCurveCalificationREAL FiscalMeasureByCupsCurveCalification = "REAL"
)

// Defines values for FiscalMeasureByCupsCurveStatus.
const (
	FiscalMeasureByCupsCurveStatusCOMPLETE FiscalMeasureByCupsCurveStatus = "COMPLETE"

	FiscalMeasureByCupsCurveStatusINCOMPLETE FiscalMeasureByCupsCurveStatus = "INCOMPLETE"
)

// Defines values for FiscalMeasureGraphMagnitude.
const (
	FiscalMeasureGraphMagnitudeAE FiscalMeasureGraphMagnitude = "AE"

	FiscalMeasureGraphMagnitudeAI FiscalMeasureGraphMagnitude = "AI"

	FiscalMeasureGraphMagnitudeR1 FiscalMeasureGraphMagnitude = "R1"

	FiscalMeasureGraphMagnitudeR2 FiscalMeasureGraphMagnitude = "R2"

	FiscalMeasureGraphMagnitudeR3 FiscalMeasureGraphMagnitude = "R3"

	FiscalMeasureGraphMagnitudeR4 FiscalMeasureGraphMagnitude = "R4"
)

// Defines values for FiscalMeasureGraphPeriod.
const (
	FiscalMeasureGraphPeriodP0 FiscalMeasureGraphPeriod = "P0"

	FiscalMeasureGraphPeriodP1 FiscalMeasureGraphPeriod = "P1"

	FiscalMeasureGraphPeriodP2 FiscalMeasureGraphPeriod = "P2"

	FiscalMeasureGraphPeriodP3 FiscalMeasureGraphPeriod = "P3"

	FiscalMeasureGraphPeriodP4 FiscalMeasureGraphPeriod = "P4"

	FiscalMeasureGraphPeriodP5 FiscalMeasureGraphPeriod = "P5"

	FiscalMeasureGraphPeriodP6 FiscalMeasureGraphPeriod = "P6"
)

// Defines values for MeterType.
const (
	MeterTypeOTHER MeterType = "OTHER"

	MeterTypeTLG MeterType = "TLG"

	MeterTypeTLM MeterType = "TLM"
)

// Defines values for MethodType.
const (
	MethodTypeADJUSTED MethodType = "ADJUSTED"

	MethodTypeCALCULATED MethodType = "CALCULATED"

	MethodTypeESTIMATED MethodType = "ESTIMATED"

	MethodTypeOUTLINED MethodType = "OUTLINED"

	MethodTypeREAL MethodType = "REAL"
)

// Origin of balance
type BalanceOriginSummary struct {
	Daily     int `json:"daily"`
	Monthly   int `json:"monthly"`
	NoClosure int `json:"no_closure"`
	Other     int `json:"other"`
}

// BalancePeriods defines model for BalancePeriods.
type BalancePeriods struct {
	Method BalancePeriodsMethod `json:"method"`
	Origin BalancePeriodsOrigin `json:"origin"`
	P0     *PeriodFeatures      `json:"p0,omitempty"`
	P1     *PeriodFeatures      `json:"p1,omitempty"`
	P2     *PeriodFeatures      `json:"p2,omitempty"`
	P3     *PeriodFeatures      `json:"p3,omitempty"`
	P4     *PeriodFeatures      `json:"p4,omitempty"`
	P5     *PeriodFeatures      `json:"p5,omitempty"`
	P6     *PeriodFeatures      `json:"p6,omitempty"`
}

// BalancePeriodsMethod defines model for BalancePeriods.Method.
type BalancePeriodsMethod string

// BalancePeriodsOrigin defines model for BalancePeriods.Origin.
type BalancePeriodsOrigin string

// Balance Qualification type
type BalanceTypeSummary struct {
	Calculated int `json:"calculated"`
	Estimated  int `json:"estimated"`
	Real       int `json:"real"`
}

// BillingMeasuresResume defines model for BillingMeasuresResume.
type BillingMeasuresResume struct {
	ActualReadingClosure   ReadingClosure `json:"actual_reading_closure"`
	PreviousReadingClosure ReadingClosure `json:"previous_reading_closure"`
}

// CalendarCurve defines model for CalendarCurve.
type CalendarCurve []CalendarCurveItem

// CalendarCurveItem defines model for CalendarCurveItem.
type CalendarCurveItem struct {
	Date   string                  `json:"date"`
	Status CalendarCurveItemStatus `binding:"oneof='REAL' 'ADJUSTED' 'OUTLINED' 'CALCULATED'  'ESTIMATED'" json:"status"`
}

// CalendarCurveItemStatus defines model for CalendarCurveItem.Status.
type CalendarCurveItemStatus string

// Curve defines model for Curve.
type Curve []ItemCurve

// Status
type CurveStatusSummary struct {
	Absent       int `json:"absent"`
	Completed    int `json:"completed"`
	NotCompleted int `json:"not_completed"`
}

// Curve Qualification type
type CurveTypeSummary struct {
	Adjusted   int  `json:"adjusted"`
	Calculated *int `json:"calculated,omitempty"`
	Estimated  *int `json:"estimated,omitempty"`
	Outlined   int  `json:"outlined"`
	Real       int  `json:"real"`
}

// DailyCurve defines model for DailyCurve.
type DailyCurve struct {
	Ae     float64          `json:"ae"`
	AeAuto *float64         `json:"ae_auto,omitempty"`
	Ai     float64          `json:"ai"`
	AiAuto *float64         `json:"ai_auto,omitempty"`
	Date   string           `json:"date"`
	R1     float64          `json:"r1"`
	R2     float64          `json:"r2"`
	R3     float64          `json:"r3"`
	R4     float64          `json:"r4"`
	Status DailyCurveStatus `binding:"oneof='REAL' 'ADJUSTED' 'OUTLINED' 'CALCULATED'  'ESTIMATED'" json:"status"`
}

// DailyCurveStatus defines model for DailyCurve.Status.
type DailyCurveStatus string

// ExecutionSummary defines model for ExecutionSummary.
type ExecutionSummary struct {
	// Origin of balance
	BalanceOrigin ExecutionSummaryBalanceOrigin `json:"balance_origin"`

	// Worst type of fiscal measures curve/balance
	BalanceType MethodType `json:"balance_type"`

	// Status of curve
	CurveStatus ExecutionSummaryCurveStatus `json:"curve_status"`

	// Worst type of fiscal measures curve/balance
	CurveType MethodType `json:"curve_type"`
}

// Origin of balance
type ExecutionSummaryBalanceOrigin string

// Status of curve
type ExecutionSummaryCurveStatus string

// Fiscal billing measures distributor object
type FiscalBillingMeasures struct {
	Balance            BalancePeriods                          `json:"balance"`
	CalendarCurve      CalendarCurve                           `json:"calendar_curve"`
	Cups               string                                  `json:"cups"`
	Curve              Curve                                   `json:"curve"`
	EndDate            string                                  `json:"end_date"`
	ExecutionSummary   ExecutionSummary                        `json:"execution_summary"`
	GraphHistory       []FiscalMeasureGraph                    `json:"graph_history"`
	Id                 string                                  `json:"id"`
	LastMvDate         string                                  `json:"last_mv_date"`
	Magnitudes         []FiscalBillingMeasuresMagnitudes       `json:"magnitudes"`
	MeterType          string                                  `json:"meter_type"`
	Periods            []FiscalBillingMeasuresPeriods          `json:"periods"`
	PrincipalMagnitude FiscalBillingMeasuresPrincipalMagnitude `binding:"oneof='AI' 'AE' 'R1' 'R2' 'R3' 'R4'" json:"principal_magnitude"`
	StartDate          string                                  `json:"start_date"`
	Status             FiscalBillingMeasuresStatus             `binding:"oneof='PENDING' 'CALCULATING' 'CALCULATED' 'READY_TO_BILL' 'BILLED' 'OVERRRIDED' 'CANCELLED'" json:"status"`
	Summary            SummaryStructure                        `json:"summary"`
}

// FiscalBillingMeasuresMagnitudes defines model for FiscalBillingMeasures.Magnitudes.
type FiscalBillingMeasuresMagnitudes string

// FiscalBillingMeasuresPeriods defines model for FiscalBillingMeasures.Periods.
type FiscalBillingMeasuresPeriods string

// FiscalBillingMeasuresPrincipalMagnitude defines model for FiscalBillingMeasures.PrincipalMagnitude.
type FiscalBillingMeasuresPrincipalMagnitude string

// FiscalBillingMeasuresStatus defines model for FiscalBillingMeasures.Status.
type FiscalBillingMeasuresStatus string

// fiscalMeasure calculated
type FiscalMeasure struct {
	CurveEstimated               *int `json:"curve_estimated,omitempty"`
	CurveReal                    *int `json:"curve_real,omitempty"`
	OriginAtrAutoReading         *int `json:"origin_atr_auto_reading,omitempty"`
	OriginAtrDaily               *int `json:"origin_atr_daily,omitempty"`
	OriginAtrEstimated           *int `json:"origin_atr_estimated,omitempty"`
	OriginAtrMonthly             *int `json:"origin_atr_monthly,omitempty"`
	OriginAtrVisual              *int `json:"origin_atr_visual,omitempty"`
	QualificationAtrCalculated   *int `json:"qualification_atr_calculated,omitempty"`
	QualificationAtrEstimated    *int `json:"qualification_atr_estimated,omitempty"`
	QualificationAtrReal         *int `json:"qualification_atr_real,omitempty"`
	QualificationCurveAdjusted   *int `json:"qualification_curve_adjusted,omitempty"`
	QualificationCurveCalculated *int `json:"qualification_curve_calculated,omitempty"`
	QualificationCurveEstimated  *int `json:"qualification_curve_estimated,omitempty"`
	QualificationCurveProfiled   *int `json:"qualification_curve_profiled,omitempty"`
	QualificationCurveReal       *int `json:"qualification_curve_real,omitempty"`
	Total                        *int `json:"total,omitempty"`
}

// fiscalMeasure by cups
type FiscalMeasureByCups struct {
	AtrCalification *FiscalMeasureByCupsAtrCalification `json:"atr_calification,omitempty"`

	// Origin of balance
	AtrType           *FiscalMeasureByCupsAtrType           `json:"atr_type,omitempty"`
	Cups              *string                               `json:"cups,omitempty"`
	CurveCalification *FiscalMeasureByCupsCurveCalification `json:"curve_calification,omitempty"`
	CurveStatus       *FiscalMeasureByCupsCurveStatus       `json:"curve_status,omitempty"`
	EndDate           *time.Time                            `json:"end_date"`
	StartDate         *time.Time                            `json:"start_date"`
}

// FiscalMeasureByCupsAtrCalification defines model for FiscalMeasureByCups.AtrCalification.
type FiscalMeasureByCupsAtrCalification string

// Origin of balance
type FiscalMeasureByCupsAtrType string

// FiscalMeasureByCupsCurveCalification defines model for FiscalMeasureByCups.CurveCalification.
type FiscalMeasureByCupsCurveCalification string

// FiscalMeasureByCupsCurveStatus defines model for FiscalMeasureByCups.CurveStatus.
type FiscalMeasureByCupsCurveStatus string

// FiscalMeasureByCupsResponse defines model for FiscalMeasureByCupsResponse.
type FiscalMeasureByCupsResponse struct {
	// Embedded struct due to allOf(#/components/schemas/Pagination)
	Pagination `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Results []FiscalMeasureByCups `json:"results"`
}

// mvh execution info
type FiscalMeasureGraph struct {
	// balance algorithm executed
	BalanceAlgorithm string `json:"balance_algorithm"`

	// curve algorithm executed
	CchAlgorithm string `json:"cch_algorithm"`

	// time of graph execute end
	FinishedAt time.Time `json:"finished_at"`

	// Magnitude graph execution
	Magnitude FiscalMeasureGraphMagnitude `json:"magnitude"`

	// Period graph execution
	Period FiscalMeasureGraphPeriod `json:"period"`

	// time of graph execute start
	StartedAt time.Time `json:"started_at"`
}

// Magnitude graph execution
type FiscalMeasureGraphMagnitude string

// Period graph execution
type FiscalMeasureGraphPeriod string

// fiscalMeasure calculated
type FiscalMeasureSummary struct {
	// Origin of balance
	BalanceOrigin BalanceOriginSummary `json:"balance_origin"`

	// Balance Qualification type
	BalanceType BalanceTypeSummary `json:"balance_type"`

	// Status
	CurveStatus CurveStatusSummary `json:"curve_status"`

	// Curve Qualification type
	CurveType CurveTypeSummary `json:"curve_type"`

	// Type of Meter
	MeterType MeterType `json:"meter_type"`
	Total     int       `json:"total"`
}

// ItemCurve defines model for ItemCurve.
type ItemCurve struct {
	Date   string       `json:"date"`
	Values []DailyCurve `json:"values"`
}

// ItemSummaryStructure defines model for ItemSummaryStructure.
type ItemSummaryStructure struct {
	P1    float64 `json:"p1"`
	P2    float64 `json:"p2"`
	P3    float64 `json:"p3"`
	P4    float64 `json:"p4"`
	P5    float64 `json:"p5"`
	P6    float64 `json:"p6"`
	Total float64 `json:"total"`
}

// day_types object
type MVH struct {
	Cups          string             `json:"cups"`
	DistributorId string             `json:"distributor_id"`
	Time          openapi_types.Date `json:"time"`
}

// MagnitudeFeatures defines model for MagnitudeFeatures.
type MagnitudeFeatures struct {
	Consum  float64 `json:"consum"`
	Reading float64 `json:"reading"`
}

// MagnitudePeriodFeatures defines model for MagnitudePeriodFeatures.
type MagnitudePeriodFeatures struct {
	Ae MagnitudeFeatures `json:"ae"`
	Ai MagnitudeFeatures `json:"ai"`
	R1 MagnitudeFeatures `json:"r1"`
	R2 MagnitudeFeatures `json:"r2"`
	R3 MagnitudeFeatures `json:"r3"`
	R4 MagnitudeFeatures `json:"r4"`
}

// Type of Meter
type MeterType string

// Worst type of fiscal measures curve/balance
type MethodType string

// Pagination defines model for Pagination.
type Pagination struct {
	Links struct {
		// url for request next list
		Next *string `json:"next,omitempty"`

		// url for request previous list
		Prev *string `json:"prev,omitempty"`

		// url for request current list
		Self string `json:"self"`
	} `json:"_links"`
	Count  int  `json:"count"`
	Limit  int  `json:"limit"`
	Offset *int `json:"offset,omitempty"`
	Size   int  `json:"size"`
}

// PeriodFeatures defines model for PeriodFeatures.
type PeriodFeatures struct {
	Ae            float64 `json:"ae"`
	Ai            float64 `json:"ai"`
	BalanceTypeAe string  `json:"balance_type_ae"`
	BalanceTypeAi string  `json:"balance_type_ai"`
	BalanceTypeR1 string  `json:"balance_type_r1"`
	BalanceTypeR2 string  `json:"balance_type_r2"`
	BalanceTypeR3 string  `json:"balance_type_r3"`
	BalanceTypeR4 string  `json:"balance_type_r4"`
	R1            float64 `json:"r1"`
	R2            float64 `json:"r2"`
	R3            float64 `json:"r3"`
	R4            float64 `json:"r4"`
}

// ReadingClosure defines model for ReadingClosure.
type ReadingClosure struct {
	EndDate       string                  `json:"end_date"`
	MeasureDevice string                  `json:"measure_device"`
	MeasureType   string                  `json:"measure_type"`
	Origin        string                  `json:"origin"`
	P0            MagnitudePeriodFeatures `json:"p0"`
	P1            MagnitudePeriodFeatures `json:"p1"`
	P2            MagnitudePeriodFeatures `json:"p2"`
	P3            MagnitudePeriodFeatures `json:"p3"`
	P4            MagnitudePeriodFeatures `json:"p4"`
	P5            MagnitudePeriodFeatures `json:"p5"`
	P6            MagnitudePeriodFeatures `json:"p6"`
	StartDate     string                  `json:"start_date"`
}

// SummaryStructure defines model for SummaryStructure.
type SummaryStructure struct {
	Adjusted   ItemSummaryStructure `json:"adjusted"`
	Calculated ItemSummaryStructure `json:"calculated"`

	// These are not percentages
	Consum struct {
		P1    float64 `json:"p1"`
		P2    float64 `json:"p2"`
		P3    float64 `json:"p3"`
		P4    float64 `json:"p4"`
		P5    float64 `json:"p5"`
		P6    float64 `json:"p6"`
		Total float64 `json:"total"`
	} `json:"consum"`
	Estimated ItemSummaryStructure `json:"estimated"`
	Outlined  ItemSummaryStructure `json:"outlined"`
	Real      ItemSummaryStructure `json:"real"`
}

// day_types object
type CreateBillingMeasuresMVH MVH

// SearchDistributorFiscalBillingMeasuresParams defines parameters for SearchDistributorFiscalBillingMeasures.
type SearchDistributorFiscalBillingMeasuresParams struct {
	// The distributor cups whose the data will be taken
	Cups string `json:"cups"`

	// The distributor whose data will be taken
	DistributorId string `json:"distributorId"`

	// Start date of the fiscal billing measures
	StartDate openapi_types.Date `json:"start_date"`

	// End date of the fiscal billing measures
	EndDate openapi_types.Date `json:"end_date"`
}

// GetBillingMeasureDashboardSummaryParams defines parameters for GetBillingMeasureDashboardSummary.
type GetBillingMeasureDashboardSummaryParams struct {
	// The distributor ID whose the data will be taken
	DistributorId string             `json:"distributor_id"`
	MeterType     MeterType          `json:"meter_type"`
	StartDate     openapi_types.Date `json:"start_date"`
	EndDate       openapi_types.Date `json:"end_date"`
}

// GetBillingMeasureTaxMeasureParams defines parameters for GetBillingMeasureTaxMeasure.
type GetBillingMeasureTaxMeasureParams struct {
	// The distributor ID whose the data will be taken
	DistributorId string `json:"distributor_id"`

	// The measure type
	MeasureType GetBillingMeasureTaxMeasureParamsMeasureType `json:"measure_type"`
	StartDate   openapi_types.Date                           `json:"start_date"`
	EndDate     openapi_types.Date                           `json:"end_date"`
}

// GetBillingMeasureTaxMeasureParamsMeasureType defines parameters for GetBillingMeasureTaxMeasure.
type GetBillingMeasureTaxMeasureParamsMeasureType string

// GetBillingMeasureTaxMeasurebycupsParams defines parameters for GetBillingMeasureTaxMeasurebycups.
type GetBillingMeasureTaxMeasurebycupsParams struct {
	// The number of items to skip before starting to collect the result set
	Offset *int `json:"offset,omitempty"`

	// The numbers of items to return
	Limit int `json:"limit"`

	// The distributor ID whose the data will be taken
	DistributorId string `json:"distributor_id"`

	// The measure type
	MeasureType GetBillingMeasureTaxMeasurebycupsParamsMeasureType `json:"measure_type"`
	StartDate   openapi_types.Date                                 `json:"start_date"`
	EndDate     openapi_types.Date                                 `json:"end_date"`
}

// GetBillingMeasureTaxMeasurebycupsParamsMeasureType defines parameters for GetBillingMeasureTaxMeasurebycups.
type GetBillingMeasureTaxMeasurebycupsParamsMeasureType string

// CreateBillingMeasuresMVHJSONRequestBody defines body for CreateBillingMeasuresMVH for application/json ContentType.
type CreateBillingMeasuresMVHJSONRequestBody CreateBillingMeasuresMVH
