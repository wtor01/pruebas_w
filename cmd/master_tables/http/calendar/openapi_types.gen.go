// Package calendar provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package calendar

const (
	BearerAuthScopes = "BearerAuth.Scopes"
)

// Defines values for CalendarPeriodDayType.
const (
	CalendarPeriodDayTypeFestive CalendarPeriodDayType = "Festive"

	CalendarPeriodDayTypeWorkable CalendarPeriodDayType = "Workable"
)

// Defines values for CalendarPeriodPeriodNumber.
const (
	CalendarPeriodPeriodNumberP1 CalendarPeriodPeriodNumber = "P1"

	CalendarPeriodPeriodNumberP2 CalendarPeriodPeriodNumber = "P2"

	CalendarPeriodPeriodNumberP3 CalendarPeriodPeriodNumber = "P3"

	CalendarPeriodPeriodNumberP4 CalendarPeriodPeriodNumber = "P4"

	CalendarPeriodPeriodNumberP5 CalendarPeriodPeriodNumber = "P5"

	CalendarPeriodPeriodNumberP6 CalendarPeriodPeriodNumber = "P6"
)

// Defines values for PeriodDayType.
const (
	PeriodDayTypeFestive PeriodDayType = "Festive"

	PeriodDayTypeWorkable PeriodDayType = "Workable"
)

// Defines values for PeriodPeriodNumber.
const (
	PeriodPeriodNumberP1 PeriodPeriodNumber = "P1"

	PeriodPeriodNumberP2 PeriodPeriodNumber = "P2"

	PeriodPeriodNumberP3 PeriodPeriodNumber = "P3"

	PeriodPeriodNumberP4 PeriodPeriodNumber = "P4"

	PeriodPeriodNumberP5 PeriodPeriodNumber = "P5"

	PeriodPeriodNumberP6 PeriodPeriodNumber = "P6"
)

// calendar object
type Calendar struct {
	Code           string `json:"code"`
	Description    string `json:"description"`
	GeographicCode string `json:"geographic_code"`
	Id             string `json:"id"`
	Periods        int    `json:"periods"`
}

// calendar_period object
type CalendarPeriod struct {
	CalendarCode string                     `json:"calendar_code"`
	DayType      CalendarPeriodDayType      `json:"day_type"`
	Description  string                     `json:"description"`
	EndDate      string                     `json:"end_date"`
	EndHour      int                        `json:"end_hour"`
	Energy       bool                       `json:"energy"`
	Id           string                     `json:"id"`
	PeriodNumber CalendarPeriodPeriodNumber `json:"period_number"`
	Power        bool                       `json:"power"`
	StartDate    string                     `json:"start_date"`
	StartHour    int                        `json:"start_hour"`
	Year         int                        `json:"year"`
}

// CalendarPeriodDayType defines model for CalendarPeriod.DayType.
type CalendarPeriodDayType string

// CalendarPeriodPeriodNumber defines model for CalendarPeriod.PeriodNumber.
type CalendarPeriodPeriodNumber string

// calendar object
type CalendarWithId struct {
	Code           string `json:"code"`
	Description    string `json:"description"`
	GeographicCode string `json:"geographic_code"`
	Id             string `json:"id"`
	Periods        int    `json:"periods"`
}

// calendar object
type Period struct {
	CalendarCode string             `json:"calendar_code"`
	DayType      PeriodDayType      `json:"day_type"`
	Description  string             `json:"description"`
	EndDate      string             `json:"end_date"`
	EndHour      int                `json:"end_hour"`
	Energy       bool               `json:"energy"`
	Id           string             `json:"id"`
	PeriodNumber PeriodPeriodNumber `json:"period_number"`
	Power        bool               `json:"power"`
	StartDate    string             `json:"start_date"`
	StartHour    int                `json:"start_hour"`
	Year         int                `json:"year"`
}

// PeriodDayType defines model for Period.DayType.
type PeriodDayType string

// PeriodPeriodNumber defines model for Period.PeriodNumber.
type PeriodPeriodNumber string

// CalendarResponseList defines model for CalendarResponseList.
type CalendarResponseList struct {
	Links struct {
		// url for request next list
		Next *string `json:"next,omitempty"`

		// url for request previous list
		Prev *string `json:"prev,omitempty"`

		// url for request current list
		Self string `json:"self"`
	} `json:"_links"`
	Count   int              `json:"count"`
	Limit   int              `json:"limit"`
	Offset  *int             `json:"offset,omitempty"`
	Results []CalendarWithId `json:"results"`
	Size    int              `json:"size"`
}

// PeriodResponseList defines model for PeriodResponseList.
type PeriodResponseList struct {
	Links struct {
		// url for request next list
		Next *string `json:"next,omitempty"`

		// url for request previous list
		Prev *string `json:"prev,omitempty"`

		// url for request current list
		Self string `json:"self"`
	} `json:"_links"`
	Count   int              `json:"count"`
	Limit   int              `json:"limit"`
	Offset  *int             `json:"offset,omitempty"`
	Results []CalendarPeriod `json:"results"`
	Size    int              `json:"size"`
}

// calendar object
type Calendars Calendar

// calendar object
type Periods Period

// GetAllCalendarsParams defines parameters for GetAllCalendars.
type GetAllCalendarsParams struct {
	// The number of items to skip before starting to collect the result set
	Offset *int `json:"offset,omitempty"`

	// The numbers of items to return
	Limit int `json:"limit"`

	// Search text
	Q *string `json:"q,omitempty"`

	// short by
	Sort *[]string `json:"sort,omitempty"`
}

// GetAllPeriodsCalendarsParams defines parameters for GetAllPeriodsCalendars.
type GetAllPeriodsCalendarsParams struct {
	// The number of items to skip before starting to collect the result set
	Offset *int `json:"offset,omitempty"`

	// The numbers of items to return
	Limit int `json:"limit"`

	// Search text
	Q *string `json:"q,omitempty"`

	// short by
	Sort *[]string `json:"sort,omitempty"`
}

// InsertCalendarsJSONRequestBody defines body for InsertCalendars for application/json ContentType.
type InsertCalendarsJSONRequestBody Calendar

// ModifyPeriodCalendarJSONRequestBody defines body for ModifyPeriodCalendar for application/json ContentType.
type ModifyPeriodCalendarJSONRequestBody Period

// ModifyCalendarJSONRequestBody defines body for ModifyCalendar for application/json ContentType.
type ModifyCalendarJSONRequestBody Calendar

// InsertPeriodsJSONRequestBody defines body for InsertPeriods for application/json ContentType.
type InsertPeriodsJSONRequestBody Period
